---
description: MUST USE when the memory_bank_status is inactive AND (user requests memory bank initialization OR task is complex)
globs:
alwaysApply: false
---
# Memory Bank

## Init

Creates the Memory Bank structure

## Flow Diagram

```mermaid
flowchart TD
    Start([Rule Triggered]) --> Confirm{memory_bank_status == 'inactive' AND User confirms?}
    Confirm -->|No| End([Stop])

    Confirm -->|Yes| HandleBrief{Handle projectBrief.md}
    HandleBrief -- Exists --> ReadBrief[**Read** projectBrief.md]
    HandleBrief -- Missing --> CreateBrief[**Create** projectBrief.md from context]

    ReadBrief --> UseBriefContext[Use Brief Context]
    CreateBrief --> UseBriefContext

    UseBriefContext --> CreateFiles[**Create** Other Memory Bank Files]

    CreateFiles --> UpdateStatus[Set memory_bank_status = 'active']
    UpdateStatus --> End

    subgraph "Files Created/Handled"
        HandleBrief
        CreateBrief --> FileBrief(projectBrief.md)
        UseBriefContext
        CreateFiles --> ProductContext[productContext.md]
        CreateFiles --> ActiveContext[activeContext.md]
        CreateFiles --> Progress[progress.md]
        CreateFiles --> DecisionLog[decisionLog.md]
        CreateFiles --> SystemPatterns[systemPatterns.md]
        CreateFiles --> TechContext[techContext.md]
    end
```

## Implementation

1. **Verify Status**: Check `memory_bank_status` is 'inactive'. Stop if active.

<thinking>
Confirm with the user before proceeding.
</thinking>

2. **Confirm**: Ask user: "Initialize Memory Bank?"
   - If No: Stop.
   - If Yes: Continue.

<thinking>
Determine context from projectBrief.md - either by reading the existing one or creating a new one based on conversation summary.
</thinking>

3. **Handle `projectBrief.md`**:
    *   **Check** if `memory-bank/projectBrief.md` exists.
    *   If Yes: **Read** its content.
    *   If No: **Create** `memory-bank/projectBrief.md`, populating it with a summary derived from conversation history and context.
    *   Store the content (read or created) as `briefContext`.

<thinking>
Use the briefContext to create the rest of the memory bank files if they don't already exist.
</thinking>

4. **Create Core Files**: Create `memory-bank/` directory if needed. Then, create the following files **only if they do not already exist**, populating relevant sections using `briefContext`:
   - `memory-bank/productContext.md` (Use `briefContext` for Goal, Features, Architecture)
   - `memory-bank/activeContext.md`
   - `memory-bank/progress.md`
   - `memory-bank/decisionLog.md`
   - `memory-bank/systemPatterns.md` (Optional, use `briefContext` if relevant)
   - `memory-bank/techContext.md` (Use `briefContext` for Technologies, Setup, Constraints, Dependencies)

   *(Note: Use simplified templates below, remove repetitive population notes)*

   - `memory-bank/productContext.md`:
     ```md
     # Product Context

     High-level project overview. Initially based on `projectBrief.md`. Update as project evolves.
     YYYY-MM-DD HH:MM:SS - Log updates here.

     ## Project Goal
     * (Populated from briefContext)

     ## Key Features
     * (Populated from briefContext)

     ## Overall Architecture
     * (Populated from briefContext)
     ```
   - `memory-bank/activeContext.md`:
     ```md
     # Active Context

     Current status, focus, changes, open questions.
     YYYY-MM-DD HH:MM:SS - Log updates here.

     ## Current Focus
     *

     ## Recent Changes
     *

     ## Open Questions/Issues
     *
     ```
   - `memory-bank/progress.md`:
     ```md
     # Progress

     Task tracking: completed, current, next steps.
     YYYY-MM-DD HH:MM:SS - Log updates here.

     ## Completed Tasks
     *

     ## Current Tasks
     *

     ## Next Steps
     *
     ```
   - `memory-bank/decisionLog.md`:
     ```md
     # Decision Log

     Record of decisions, rationale, implementation details.
     YYYY-MM-DD HH:MM:SS - Log updates here.

     ## Decision
     *

     ## Rationale
     *

     ## Implementation Details
     *
     ```
   - `memory-bank/systemPatterns.md`:
     ```md
     # System Patterns *Optional*

     Recurring patterns/standards (coding, architecture, testing).
     YYYY-MM-DD HH:MM:SS - Log updates here.

     ## Coding Patterns
     * (Populated from briefContext if relevant)

     ## Architectural Patterns
     * (Populated from briefContext if relevant)

     ## Testing Patterns
     * (Populated from briefContext if relevant)
     ```
   - `memory-bank/techContext.md`:
     ```md
     # Technical Context

     Technologies, setup, constraints, dependencies. Initially based on `briefContext`.
     YYYY-MM-DD HH:MM:SS - Log updates here.

     ## Core Technologies
     * (Populated from briefContext)

     ## Development Environment Setup
     * (Populated from briefContext)

     ## Technical Constraints/Decisions
     * (Populated from briefContext)

     ## Key Dependencies
     * (Populated from briefContext)
     ```

6. **Activate**: Set `memory_bank_status` = 'active'.

7. **Revisit rules**: <thinking>Re-visit **ALL** rules, and load **ALL** missing</thinking>

## File Templates (Summary)

- **productContext.md**: Project goals, features, architecture
- **activeContext.md**: Current focus, recent changes, open questions
- **progress.md**: Completed/current/next tasks
- **decisionLog.md**: Decisions with rationale
- **systemPatterns.md**: Coding/architectural/testing patterns
- **techContext.md**: Technologies, setup, constraints, dependencies
